#!/bin/bash

# Script de instala√ß√£o do ArboreoMonitor

set -e

echo "üå± Instalando ArboreoMonitor..."

# Verificar se Python 3.9+ est√° instalado
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 n√£o encontrado. Por favor, instale Python 3.9+ primeiro."
    exit 1
fi

PYTHON_VERSION=$(python3 -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
if [[ $(echo "$PYTHON_VERSION < 3.9" | bc -l) -eq 1 ]]; then
    echo "‚ùå Python 3.9+ √© necess√°rio. Vers√£o atual: $PYTHON_VERSION"
    exit 1
fi

echo "‚úÖ Python $PYTHON_VERSION encontrado"

# Criar ambiente virtual
echo "üì¶ Criando ambiente virtual..."
python3 -m venv venv
source venv/bin/activate

# Atualizar pip
echo "üîÑ Atualizando pip..."
pip install --upgrade pip

# Instalar depend√™ncias
echo "üìö Instalando depend√™ncias..."
pip install -r requirements.txt

# Criar diret√≥rios necess√°rios
echo "üìÅ Criando diret√≥rios..."
mkdir -p data/{input,output,models,3d_models,metadata,analysis}
mkdir -p logs
mkdir -p config

# Copiar arquivo de configura√ß√£o se n√£o existir
if [ ! -f "config/config.yaml" ]; then
    echo "‚öôÔ∏è  Criando arquivo de configura√ß√£o..."
    cp config/config.example.yaml config/config.yaml
fi

# Verificar se CUDA est√° dispon√≠vel
if command -v nvidia-smi &> /dev/null; then
    echo "üöÄ CUDA detectado:"
    nvidia-smi --query-gpu=name,memory.total --format=csv,noheader,nounits
else
    echo "‚ö†Ô∏è  CUDA n√£o detectado. O sistema funcionar√° apenas com CPU."
fi

# Verificar se Docker est√° dispon√≠vel
if command -v docker &> /dev/null; then
    echo "üê≥ Docker detectado"
    if command -v docker-compose &> /dev/null; then
        echo "üê≥ Docker Compose detectado"
    else
        echo "‚ö†Ô∏è  Docker Compose n√£o encontrado. Instale para usar containers."
    fi
else
    echo "‚ö†Ô∏è  Docker n√£o encontrado. Instale para usar containers."
fi

# Verificar se PostgreSQL est√° dispon√≠vel
if command -v psql &> /dev/null; then
    echo "üêò PostgreSQL detectado"
else
    echo "‚ö†Ô∏è  PostgreSQL n√£o encontrado. O sistema usar√° SQLite por padr√£o."
fi

# Verificar se Redis est√° dispon√≠vel
if command -v redis-cli &> /dev/null; then
    echo "üî¥ Redis detectado"
else
    echo "‚ö†Ô∏è  Redis n√£o encontrado. O sistema funcionar√° sem cache."
fi

echo ""
echo "üéâ Instala√ß√£o conclu√≠da!"
echo ""
echo "Para iniciar o sistema:"
echo "  source venv/bin/activate"
echo "  python main.py"
echo ""
echo "Para usar Docker:"
echo "  docker-compose up -d"
echo ""
echo "Para mais informa√ß√µes, consulte a documenta√ß√£o em docs/"
